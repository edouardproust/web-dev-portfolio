/*-----------------------------------------------------------------------------------

	Shortcodes: buttons.scss

-----------------------------------------------------------------------------------*/

/* ----------------------------------------------------------------
	Buttons
-----------------------------------------------------------------*/

$btn-prefix: button;

.#{$btn-prefix} {
	display: inline-block;
	position: relative;
	cursor: pointer;
	outline: none;
	white-space: nowrap;
	margin: 5px;
	padding: $button-padding-y $button-padding-x;
	font-size: $button-font-size;
	line-height: $button-l-height;
	@include gradient-bg($button-color);
	color: $color-contrast-light;
	font-weight: 700;
	letter-spacing: 1px;
	border: none;
	text-shadow: 1px 1px 1px $button-text-shadow;
	i {
		position: relative;
		margin-right: $button-icon-margin;
		width: 16px;
		text-align: center;
	}
	&.text-end {
		i { margin: 0 0 0 $button-icon-margin; }
	}
	body:not(.device-touch) & {
		@include transition(all $button-transition-speed);
	}

	&#{&}-light {
		@if $buttons-color == true {
			background-color: $button-light;
			color: darken($text-color, 6.67);
		} @else {
			background-color: $button-color;
			color: #FFF;
		}
		text-shadow: none !important;
	}
	&:hover {
		background-color: $button-light-hover-color;
		color: #FFF;
		text-shadow: 1px 1px 1px $button-text-shadow;
	}

	&-mini {
		padding: $button-mini-padding-y $button-mini-padding-x;
		font-size: $button-mini-font-size;
		line-height: $button-mini-l-height;
		i { margin-right: $button-icon-margin - 2; }
		&.text-end i { margin: 0 0 0 $button-icon-margin - 2; }
	}

	&-small {
		padding: $button-sm-padding-y $button-sm-padding-x;
		font-size: $button-sm-font-size;
		line-height: $button-sm-l-height;
		i { margin-right: $button-icon-margin - 1; }
		&.text-end i { margin: 0 0 0 $button-icon-margin - 1; }
	}

	&-large {
		padding: $button-lg-padding-y $button-lg-padding-x;
		font-size: $button-lg-font-size;
		line-height: $button-lg-l-height;
	}

	&-xlarge {
		padding: $button-xl-padding-y $button-xl-padding-x;
		font-size: $button-xl-font-size;
		letter-spacing: 2px;
		line-height: $button-xl-l-height;
		i {
			margin-right: $button-icon-margin + 3;
		}
		&.text-end i { margin: 0 0 0 $button-icon-margin + 3; }
	}

	&-desc {
		text-align: left;
		padding: 24px 34px;
		font-size: $button-font-size / 0.7;
		height: auto;
		line-height: 1;
		font-family: $heading-font;
		span {
			display: block;
			margin-top: 10px;
			font-size: $button-font-size;
			font-weight: 400;
			letter-spacing: 1px;
			font-family: $secondary-font;
			font-style: italic;
			text-transform: none;
		}
		i {
			font-size: ($button-font-size / 0.7) * 2.4;
			width: ($button-font-size / 0.7) * 2.4;
			text-align: center;
			margin-right: 12px;
		}
		&.text-end i { margin: 0 0 0 12px; }
		div { display: inline-block; }
	}

	&-rounded { border-radius: $button-rounded; }

	/* Buttons - Border
	-----------------------------------------------------------------*/

	&.#{$btn-prefix}-border {
		border: $button-border-width solid $button-dark;
		border-color: $button-color;
		background: transparent;
		color: darken($button-color, 10%); // darken($button-dark, 6.67);
		font-weight: 700;
		text-shadow: none;
		i { 
			height: calc(100% + $button-border-width * 2) !important;
		}
		&-thin {
			border-width: $button-border-thin-width;
			i { 
				height: calc(100% + $button-border-thin-width * 2) !important; 
			}
		}
		&.#{$btn-prefix}-desc { line-height: 1; }
		&:not(.#{$btn-prefix}-fill):hover {
			color: #FFF;
			background-color: $button-light-hover-color;
			border-color: rgba(0,0,0,0.1) !important;
			text-shadow: 1px 1px 1px $button-text-shadow;
		}
		&.#{$btn-prefix}-light {
			@if $buttons-color == true {
				border-color: #FFF;
				color: #FFF;
			} @else {
				border-color: $button-dark;
				color: darken($button-dark, 6.67);
			}
			&:hover {
				@if $buttons-color == true {
					background-color: #FFF;
					color: darken($button-dark, 6.67);
					text-shadow: none;
				} @else {
					border-color: $button-dark;
					color: #FFF;
				}
			}
		}
	}

	/* Buttons - Icon Reveal
	-----------------------------------------------------------------*/
	$button-reveal-mini-icon: ($button-reveal-icon - 10);
	$button-reveal-small-icon: ($button-reveal-icon - 6);
	$button-reveal-lg-icon: ($button-reveal-icon + 6);
	$button-reveal-xl-icon: ($button-reveal-icon + 12);

	&.#{$btn-prefix}-reveal {
		padding-left: $button-reveal-padding-x;
		padding-right: $button-reveal-padding-x;
		overflow: hidden;
		i {
			display: block;
			position: absolute;
			top: 0;
			left: -$button-reveal-icon;
			width: $button-reveal-icon;
			height: 100%;
			display: -ms-flexbox;
			display: flex;
			align-items: center;
			justify-content: center;
			margin: 0;
			background-color: rgba(0,0,0,0.1);
		}
		&.#{$btn-prefix}-border i { top: -2px; }
		&.text-end i {
			left: auto;
			right: -$button-reveal-icon;
		}
		&.#{$btn-prefix}-3d i,
		&.#{$btn-prefix}-rounded i { border-radius: $button-rounded 0 0 $button-rounded;
			&.text-end i { border-radius: 0 $button-rounded $button-rounded 0; }
		}
		span {
			display: inline-block;
			position: relative;
			left: 0;
		}

		&.#{$btn-prefix}-mini {
			padding-left: ($button-mini-padding-x + 3);
			padding-right: ($button-mini-padding-x + 3);
			i {
				left: -($button-reveal-mini-icon);
				width: $button-reveal-mini-icon;
			}
			&.text-end i {
				left: auto;
				right: -($button-reveal-mini-icon);
			}
			&:hover span { left: round($button-reveal-mini-icon / 2); }
			&.text-end:hover span { left: - round($button-reveal-mini-icon / 2); }
		}

		&.#{$btn-prefix}-small {
			padding-left: $button-sm-padding-x + 5;
			padding-right: $button-sm-padding-x + 5;
			i {
				left: -$button-reveal-small-icon;
				width: $button-reveal-small-icon;
			}
			&.text-end i {
				left: auto;
				right: -$button-reveal-small-icon;
			}
			&:hover span { left: round($button-reveal-small-icon / 2); }
			&.text-end:hover span { left: - round($button-reveal-small-icon / 2); }
		}

		&.#{$btn-prefix}-large {
			padding-left: ($button-lg-padding-x + 6);
			padding-right: ($button-lg-padding-x + 6);
			i {
				left: -($button-reveal-lg-icon);
				width: ($button-reveal-lg-icon);
			}
			&.text-end i {
				left: auto;
				right: -($button-reveal-lg-icon);
			}
			&:hover span { left: round($button-reveal-lg-icon / 2); }
			&.text-end:hover span { left: - round($button-reveal-lg-icon / 2); }
		}

		&.#{$btn-prefix}-xlarge {
			padding-right: ($button-xl-padding-x + 8);
			padding-left: ($button-xl-padding-x + 8);
			i {
				left: -($button-reveal-xl-icon);
				width: ($button-reveal-xl-icon);
			}
			&.text-end i {
				left: auto;
				right: -($button-reveal-xl-icon);
			}
			&:hover span { left: round($button-reveal-xl-icon / 2); }
			&.text-end:hover span { left: - round($button-reveal-xl-icon / 2); }
		}

		&:hover i { left: 0; }
		&.text-end:hover i {
			left: auto;
			right: 0;
		}
		&:hover span { left: round($button-reveal-icon / 2); }
		&.text-end:hover span { left: - round($button-reveal-icon / 2); }
	}
}

body:not(.device-touch) .#{$btn-prefix}-reveal i,
body:not(.device-touch) .#{$btn-prefix}-reveal span {
	@include transition(left $button-reveal-transition-speed, right $button-reveal-transition-speed);
}

/* Buttons - States
-----------------------------------------------------------------*/
.#{$btn-prefix} {
	&.disabled,
	&:disabled {
		opacity: 0.65 !important;
		pointer-events: none !important;
	}
}

/* Buttons - Colors
-----------------------------------------------------------------*/

@mixin buttons-color($colors) {
  @each $name, $hex in $colors {
	.#{$btn-prefix}-border {
		&.#{$btn-prefix}-#{$name},
		&.#{$btn-prefix}-light.button-#{$name} {
			color: $hex;
			border-color: $hex;
		}
	}
  }
}

// Include Buttons Colored
@if $buttons-color == true { @include buttons-color($button_colors); }
@if $buttons-social-colors == true { @include buttons-color($si-colors); } // Default False in Variables.scss
